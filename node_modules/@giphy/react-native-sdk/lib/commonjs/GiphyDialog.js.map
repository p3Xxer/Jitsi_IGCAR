{"version":3,"sources":["GiphyDialog.ts"],"names":["wrapMediaSelectedListener","listener","e","media","GiphyDialog","NativeEventEmitter","constructor","NativeGiphyDialog","addListener","GiphyDialogEvent","MediaSelected","noop","Dismissed","eventType","rest","configure","config","show","GiphyVideoManager","pauseAll","hide"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AAUA,SAASA,yBAAT,CAAmCC,QAAnC,EAA0G;AACxG,SAAQC,CAAD,IAAO;AACZA,IAAAA,CAAC,CAACC,KAAF,GAAU,gCAAeD,CAAC,CAACC,KAAjB,CAAV;AACA,WAAOF,QAAQ,CAACC,CAAD,CAAf;AACD,GAHD;AAID;;AAEM,MAAME,WAAW,GAAG,IAAK,cAAcC,+BAAd,CAAiC;AAC/DC,EAAAA,WAAW,GAAG;AACZ,UAAMC,8BAAN,EADY,CAEZ;;AACA,SAAKC,WAAL,CAAiBC,8BAAiBC,aAAlC,EAAiDC,UAAjD;AACA,SAAKH,WAAL,CAAiBC,8BAAiBG,SAAlC,EAA6CD,UAA7C;AACD;;AAEDH,EAAAA,WAAW,CAACK,SAAD,EAAoBZ,QAApB,EAA4F;AAAA,sCAAlCa,IAAkC;AAAlCA,MAAAA,IAAkC;AAAA;;AACrG,QAAID,SAAS,KAAKJ,8BAAiBC,aAAnC,EAAkD;AAChD,aAAO,MAAMF,WAAN,CAAkBK,SAAlB,EAA6BZ,QAA7B,EAAuC,GAAGa,IAA1C,CAAP;AACD;;AAED,WAAO,MAAMN,WAAN,CAAkBK,SAAlB,EAA6Bb,yBAAyB,CAACC,QAAD,CAAtD,EAAkE,GAAGa,IAArE,CAAP;AACD;;AAEDC,EAAAA,SAAS,CAACC,MAAD,EAA4B;AACnCT,mCAAkBQ,SAAlB,CAA4BC,MAA5B;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACLC,yCAAkBC,QAAlB;;AACAZ,mCAAkBU,IAAlB;AACD;;AAEDG,EAAAA,IAAI,GAAG;AACLb,mCAAkBa,IAAlB;AACD;;AA3B8D,CAAtC,EAApB","sourcesContent":["import { EmitterSubscription, NativeEventEmitter } from 'react-native'\n\nimport { makeGiphyMedia } from './giphyMedia'\nimport { noop } from './utils/noop'\nimport { GiphyVideoManager } from './GiphyVideoManager'\nimport {\n  AndroidGiphyDialogConfig,\n  GiphyDialogEvent,\n  GiphyDialogMediaSelectEventHandler,\n  IOSGiphyDialogConfig,\n  NativeGiphyDialog,\n} from './native/GiphyDialog'\n\nexport type GiphyDialogConfig = IOSGiphyDialogConfig & AndroidGiphyDialogConfig\n\nfunction wrapMediaSelectedListener(listener: (...args: any[]) => any): GiphyDialogMediaSelectEventHandler {\n  return (e) => {\n    e.media = makeGiphyMedia(e.media)\n    return listener(e)\n  }\n}\n\nexport const GiphyDialog = new (class extends NativeEventEmitter {\n  constructor() {\n    super(NativeGiphyDialog)\n    // listener stubs\n    this.addListener(GiphyDialogEvent.MediaSelected, noop)\n    this.addListener(GiphyDialogEvent.Dismissed, noop)\n  }\n\n  addListener(eventType: string, listener: (...args: any[]) => any, ...rest: any[]): EmitterSubscription {\n    if (eventType !== GiphyDialogEvent.MediaSelected) {\n      return super.addListener(eventType, listener, ...rest)\n    }\n\n    return super.addListener(eventType, wrapMediaSelectedListener(listener), ...rest)\n  }\n\n  configure(config: GiphyDialogConfig) {\n    NativeGiphyDialog.configure(config)\n  }\n\n  show() {\n    GiphyVideoManager.pauseAll()\n    NativeGiphyDialog.show()\n  }\n\n  hide() {\n    NativeGiphyDialog.hide()\n  }\n})()\n"]}