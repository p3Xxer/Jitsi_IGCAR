{"version":3,"sources":["types.ts"],"names":["GiphyThemePreset","GiphyContentType","GiphyMediaType","GiphyRating","GiphyRendition","GiphyClipsRendition","Original","OriginalStill","FixedHeight","FixedHeightStill","FixedHeightDownsampled","FixedWidth","FixedWidthStill","FixedWidthDownsampled","DownsizedMedium","DownsizedLarge","GiphyStickersColumnCount","GiphyFileExtension","GiphyDirection","GiphyContentRequestType"],"mappings":";;;;;;IAEYA,gB;;;WAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,gCAAAA,gB;;IAMAC,gB;;;WAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,gCAAAA,gB;;IASAC,c;;;WAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,8BAAAA,c;;IAOAC,W;;;WAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,2BAAAA,W;;IASAC,c;;;WAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,8BAAAA,c;;AAmCL,MAAMC,mBAGZ,GAAG;AACFC,EAAAA,QAAQ,EAAEF,cAAc,CAACE,QADvB;AAEFC,EAAAA,aAAa,EAAEH,cAAc,CAACG,aAF5B;AAGFC,EAAAA,WAAW,EAAEJ,cAAc,CAACI,WAH1B;AAIFC,EAAAA,gBAAgB,EAAEL,cAAc,CAACK,gBAJ/B;AAKFC,EAAAA,sBAAsB,EAAEN,cAAc,CAACM,sBALrC;AAMFC,EAAAA,UAAU,EAAEP,cAAc,CAACO,UANzB;AAOFC,EAAAA,eAAe,EAAER,cAAc,CAACQ,eAP9B;AAQFC,EAAAA,qBAAqB,EAAET,cAAc,CAACS,qBARpC;AASFC,EAAAA,eAAe,EAAEV,cAAc,CAACU,eAT9B;AAUFC,EAAAA,cAAc,EAAEX,cAAc,CAACW;AAV7B,CAHG;;IAgBKC,wB;;;WAAAA,wB;AAAAA,EAAAA,wB,CAAAA,wB;AAAAA,EAAAA,wB,CAAAA,wB;AAAAA,EAAAA,wB,CAAAA,wB;GAAAA,wB,wCAAAA,wB;;IAMAC,kB;;;WAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;GAAAA,kB,kCAAAA,kB;;IAMAC,c;;;WAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,8BAAAA,c;;IAKAC,uB;;;WAAAA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;GAAAA,uB,uCAAAA,uB","sourcesContent":["import type { ConditionalKeys } from 'type-fest'\n\nexport enum GiphyThemePreset {\n  Automatic = 'automatic',\n  Dark = 'dark',\n  Light = 'light',\n}\n\nexport enum GiphyContentType {\n  Emoji = 'emoji',\n  Gif = 'gif',\n  Recents = 'recents',\n  Sticker = 'sticker',\n  Text = 'text',\n  Clips = 'clips',\n}\n\nexport enum GiphyMediaType {\n  Gif = 'gif',\n  Sticker = 'sticker',\n  Text = 'text',\n  Video = 'video',\n}\n\nexport enum GiphyRating {\n  G = 'g',\n  PG = 'pg',\n  PG13 = 'pg-13',\n  R = 'r',\n  Unrated = 'unrated',\n  Y = 'y',\n}\n\nexport enum GiphyRendition {\n  Original = 'original',\n  OriginalStill = 'original_still',\n  Preview = 'preview',\n  Looping = 'looping',\n  FixedHeight = 'fixed_height',\n  FixedHeightStill = 'fixed_height_still',\n  FixedHeightDownsampled = 'fixed_height_downsampled',\n  FixedHeightSmall = 'fixed_height_small',\n  FixedHeightSmallStill = 'fixed_height_small_still',\n  FixedWidth = 'fixed_width',\n  FixedWidthStill = 'fixed_width_still',\n  FixedWidthDownsampled = 'fixed_width_downsampled',\n  FixedWidthSmall = 'fixed_width_small',\n  FixedWidthSmallStill = 'fixed_width_small_still',\n  Downsized = 'downsized',\n  DownsizedSmall = 'downsized_small',\n  DownsizedMedium = 'downsized_medium',\n  DownsizedLarge = 'downsized_large',\n  DownsizedStill = 'downsized_still',\n}\n\nexport type GiphyClipsRendition = Exclude<\n  GiphyRendition,\n  | GiphyRendition.Preview\n  | GiphyRendition.Looping\n  | GiphyRendition.FixedWidthSmall\n  | GiphyRendition.FixedWidthSmallStill\n  | GiphyRendition.FixedHeightSmall\n  | GiphyRendition.FixedHeightSmallStill\n  | GiphyRendition.DownsizedSmall\n  | GiphyRendition.DownsizedStill\n  | GiphyRendition.Downsized\n>\n\nexport const GiphyClipsRendition: Record<\n  ConditionalKeys<typeof GiphyRendition, GiphyClipsRendition>,\n  GiphyClipsRendition\n> = {\n  Original: GiphyRendition.Original,\n  OriginalStill: GiphyRendition.OriginalStill,\n  FixedHeight: GiphyRendition.FixedHeight,\n  FixedHeightStill: GiphyRendition.FixedHeightStill,\n  FixedHeightDownsampled: GiphyRendition.FixedHeightDownsampled,\n  FixedWidth: GiphyRendition.FixedWidth,\n  FixedWidthStill: GiphyRendition.FixedWidthStill,\n  FixedWidthDownsampled: GiphyRendition.FixedWidthDownsampled,\n  DownsizedMedium: GiphyRendition.DownsizedMedium,\n  DownsizedLarge: GiphyRendition.DownsizedLarge,\n}\n\nexport enum GiphyStickersColumnCount {\n  Two = 2,\n  Three,\n  Four,\n}\n\nexport enum GiphyFileExtension {\n  GIF = 'gif',\n  MP4 = 'mp4',\n  WebP = 'webp',\n}\n\nexport enum GiphyDirection {\n  Horizontal = 'horizontal',\n  Vertical = 'vertical',\n}\n\nexport enum GiphyContentRequestType {\n  Trending = 'trending',\n  Search = 'search',\n  Emoji = 'emoji',\n  Recents = 'recents',\n  Animate = 'animate',\n}\n\nexport type GiphyContentRequest = {\n  mediaType: GiphyMediaType\n  rating?: GiphyRating\n  requestType: GiphyContentRequestType\n  searchQuery: string\n}\n"]}