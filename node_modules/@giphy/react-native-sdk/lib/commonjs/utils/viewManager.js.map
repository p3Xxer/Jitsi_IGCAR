{"version":3,"sources":["viewManager.ts"],"names":["getViewManagerConfig","moduleName","UIManager","runViewManagerCommand","options","args","command","nodeHandle","viewManagerConfig","dispatchViewManagerCommand","Commands"],"mappings":";;;;;;;;AAAA;;AAIO,SAASA,oBAAT,CAA8BC,UAA9B,EAA+D;AACpE,MAAIC,uBAAUF,oBAAd,EAAoC;AAClC;AACA,WAAOE,uBAAUF,oBAAV,CAA+BC,UAA/B,CAAP;AACD,GAJmE,CAKpE;;;AACA,SAAQC,sBAAD,CAAmBD,UAAnB,CAAP;AACD;;AASM,SAASE,qBAAT,CAA4CC,OAA5C,EAAsF;AAC3F,QAAM;AAAEC,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,OAAb;AAAsBL,IAAAA,UAAtB;AAAkCM,IAAAA;AAAlC,MAAiDH,OAAvD;;AACA,MAAI,CAACG,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,QAAMC,iBAAiB,GAAGR,oBAAoB,CAACC,UAAD,CAA9C;AACA,SAAOC,uBAAUO,0BAAV,CAAqCF,UAArC,EAAiDC,iBAAiB,CAACE,QAAlB,CAA2BJ,OAA3B,CAAjD,EAAsFD,IAAtF,CAAP;AACD","sourcesContent":["import { UIManager } from 'react-native'\n\nexport type ViewManager = ReturnType<typeof UIManager['getViewManagerConfig']>\n\nexport function getViewManagerConfig(moduleName: string): ViewManager {\n  if (UIManager.getViewManagerConfig) {\n    // RN >= 0.58\n    return UIManager.getViewManagerConfig(moduleName)\n  }\n  // RN < 0.58\n  return (UIManager as any)[moduleName]\n}\n\nexport type RunViewManagerCommandOptions<T = unknown> = {\n  args?: T[]\n  command: string\n  moduleName: string\n  nodeHandle: number | null\n}\n\nexport function runViewManagerCommand<T = unknown>(options: RunViewManagerCommandOptions<T>) {\n  const { args = [], command, moduleName, nodeHandle } = options\n  if (!nodeHandle) {\n    return null\n  }\n\n  const viewManagerConfig = getViewManagerConfig(moduleName)\n  return UIManager.dispatchViewManagerCommand(nodeHandle, viewManagerConfig.Commands[command], args)\n}\n"]}