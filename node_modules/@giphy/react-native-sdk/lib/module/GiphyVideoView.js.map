{"version":3,"sources":["GiphyVideoView.tsx"],"names":["React","AppState","NativeGiphyVideoView","GiphyVideoManager","deprecatedPropType","mountedComponentsCount","appStateListenerAdded","latestAppState","currentState","appStateListener","appState","match","muteAll","addAppStateListener","addEventListener","removeAppStateListener","registerComponent","unregisterComponent","Math","max","GiphyVideoView","Component","componentDidMount","componentWillUnmount","render","props","playing","explanation"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyC,cAAzC;AAEA,SAASC,oBAAT,QAAgE,yBAAhE;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AAIA,IAAIC,sBAAsB,GAAG,CAA7B;AACA,IAAIC,qBAAqB,GAAG,KAA5B;AACA,IAAIC,cAA8B,GAAGN,QAAQ,CAACO,YAA9C;;AAEA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoD;AAClD,MAAIH,cAAc,KAAK,QAAnB,IAA+BG,QAAQ,CAACC,KAAT,CAAe,qBAAf,CAAnC,EAA0E;AACxER,IAAAA,iBAAiB,CAACS,OAAlB;AACD;;AACDL,EAAAA,cAAc,GAAGG,QAAjB;AACD;;AAED,SAASG,mBAAT,GAA+B;AAC7BN,EAAAA,cAAc,GAAGN,QAAQ,CAACO,YAA1B;AACAP,EAAAA,QAAQ,CAACa,gBAAT,CAA0B,QAA1B,EAAoCL,gBAApC;AACAH,EAAAA,qBAAqB,GAAG,IAAxB;AACD;;AAED,SAASS,sBAAT,GAAkC;AAChCd,EAAAA,QAAQ,CAACa,gBAAT,CAA0B,QAA1B,EAAoCL,gBAApC;AACAH,EAAAA,qBAAqB,GAAG,KAAxB;AACD;;AAED,SAASU,iBAAT,GAA6B;AAC3BX,EAAAA,sBAAsB,IAAI,CAA1B;;AACA,MAAI,CAACC,qBAAL,EAA4B;AAC1BO,IAAAA,mBAAmB;AACpB;AACF;;AAED,SAASI,mBAAT,GAA+B;AAC7BZ,EAAAA,sBAAsB,GAAGa,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYd,sBAAsB,GAAG,CAArC,CAAzB;;AACA,MAAIA,sBAAsB,KAAK,CAA3B,IAAgCC,qBAApC,EAA2D;AACzDS,IAAAA,sBAAsB;AACvB;AACF;;AAED,OAAO,MAAMK,cAAN,SAA6BpB,KAAK,CAACqB,SAAnC,CAAsE;AAO3EC,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,iBAAiB;AAClB;;AAEDO,EAAAA,oBAAoB,GAAG;AACrBN,IAAAA,mBAAmB;AACpB;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,oBAAD,EAA0B,KAAKC,KAA/B,CAAP;AACD;;AAjB0E;;gBAAhEL,c,eACQ;AACjBM,EAAAA,OAAO,EAAEtB,kBAAkB,CAAC;AAC1BuB,IAAAA,WAAW,EAAE;AADa,GAAD;AADV,C","sourcesContent":["import React from 'react'\nimport { AppState, AppStateStatus } from 'react-native'\n\nimport { NativeGiphyVideoView, NativeGiphyVideoViewProps } from './native/GiphyVideoView'\nimport { GiphyVideoManager } from './GiphyVideoManager'\nimport deprecatedPropType from './utils/deprecatedPropType'\n\nexport type GiphyVideoViewProps = NativeGiphyVideoViewProps\n\nlet mountedComponentsCount = 0\nlet appStateListenerAdded = false\nlet latestAppState: AppStateStatus = AppState.currentState\n\nfunction appStateListener(appState: AppStateStatus) {\n  if (latestAppState === 'active' && appState.match(/inactive|background/)) {\n    GiphyVideoManager.muteAll()\n  }\n  latestAppState = appState\n}\n\nfunction addAppStateListener() {\n  latestAppState = AppState.currentState\n  AppState.addEventListener('change', appStateListener)\n  appStateListenerAdded = true\n}\n\nfunction removeAppStateListener() {\n  AppState.addEventListener('change', appStateListener)\n  appStateListenerAdded = false\n}\n\nfunction registerComponent() {\n  mountedComponentsCount += 1\n  if (!appStateListenerAdded) {\n    addAppStateListener()\n  }\n}\n\nfunction unregisterComponent() {\n  mountedComponentsCount = Math.max(0, mountedComponentsCount - 1)\n  if (mountedComponentsCount === 0 && appStateListenerAdded) {\n    removeAppStateListener()\n  }\n}\n\nexport class GiphyVideoView extends React.Component<GiphyVideoViewProps, {}> {\n  static propTypes = {\n    playing: deprecatedPropType({\n      explanation: 'This property will be removed in v2, please use autoPlay instead',\n    }),\n  }\n\n  componentDidMount() {\n    registerComponent()\n  }\n\n  componentWillUnmount() {\n    unregisterComponent()\n  }\n\n  render() {\n    return <NativeGiphyVideoView {...this.props} />\n  }\n}\n"]}