{"version":3,"sources":["GiphyDialog.ts"],"names":["NativeModules","GiphyDialogEvent","NativeGiphyDialog","GiphyReactNativeDialog"],"mappings":"AAAA,SAASA,aAAT,QAAuD,cAAvD;AAsCA,WAAYC,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,KAAAA,gB;;AAiBZ,OAAO,MAAMC,iBAAqC,GAAGF,aAAa,CAACG,sBAA5D","sourcesContent":["import { NativeModules, EventSubscriptionVendor } from 'react-native'\n\nimport type { GiphyMedia } from '../giphyMedia'\nimport type {\n  GiphyClipsRendition,\n  GiphyContentType,\n  GiphyFileExtension,\n  GiphyRating,\n  GiphyRendition,\n  GiphyStickersColumnCount,\n  GiphyThemePreset,\n} from './types'\n\nexport type BaseNativeGiphyDialogConfig = {\n  clipsPreviewRenditionType?: GiphyClipsRendition\n  mediaTypeConfig?: GiphyContentType[]\n  rating?: GiphyRating\n  renditionType?: GiphyRendition\n  showConfirmationScreen?: boolean\n  stickerColumnCount?: GiphyStickersColumnCount\n  theme?: GiphyThemePreset\n  fileType?: GiphyFileExtension\n}\n\nexport type IOSGiphyDialogConfig = BaseNativeGiphyDialogConfig & {\n  shouldLocalizeSearch?: boolean\n  trayHeightMultiplier?: number\n}\n\nexport type AndroidGiphyDialogConfig = BaseNativeGiphyDialogConfig & {\n  confirmationRenditionType?: GiphyRendition\n  selectedContentType?: GiphyContentType\n  showCheckeredBackground?: boolean\n  showSuggestionsBar?: boolean\n}\n\nexport type NativeGiphyDialogConfig = IOSGiphyDialogConfig & AndroidGiphyDialogConfig\n\nexport enum GiphyDialogEvent {\n  MediaSelected = 'onMediaSelect',\n  Dismissed = 'onDismiss',\n}\n\nexport type GiphyDialogMediaSelectEventHandler = (e: { media: GiphyMedia }) => void\n\nexport type GiphyDialogDismissEventHandler = (e: undefined) => void\n\nexport interface INativeGiphyDialog extends EventSubscriptionVendor {\n  configure(options: NativeGiphyDialogConfig): void\n\n  show(): void\n\n  hide(): void\n}\n\nexport const NativeGiphyDialog: INativeGiphyDialog = NativeModules.GiphyReactNativeDialog\n"]}