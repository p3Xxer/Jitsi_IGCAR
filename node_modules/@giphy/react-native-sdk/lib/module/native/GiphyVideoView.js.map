{"version":3,"sources":["GiphyVideoView.ts"],"names":["requireNativeComponent","GiphyVideoViewPlaybackState","NativeGiphyVideoView"],"mappings":"AAAA,SAA+BA,sBAA/B,QAAwE,cAAxE;AAIA,WAAYC,2BAAZ,C,CAOA;;WAPYA,2B;AAAAA,EAAAA,2B,CAAAA,2B;AAAAA,EAAAA,2B,CAAAA,2B;AAAAA,EAAAA,2B,CAAAA,2B;AAAAA,EAAAA,2B,CAAAA,2B;GAAAA,2B,KAAAA,2B;;AAsBZ,OAAO,MAAMC,oBAAoB,GAAGF,sBAAsB,CAA4B,2BAA5B,CAAnD","sourcesContent":["import { NativeSyntheticEvent, requireNativeComponent, ViewProps } from 'react-native'\n\nimport type { GiphyMediaID } from '../giphyMedia'\n\nexport enum GiphyVideoViewPlaybackState {\n  Unknown = 0,\n  ReadyToPlay = 3,\n  Playing = 4,\n  Paused = 5,\n}\n\n// TODO v2 remove `playing`\nexport type NativeGiphyVideoViewProps = ViewProps & {\n  autoPlay?: boolean\n  media?: GiphyMediaID\n  muted?: boolean\n  /**\n   * @deprecated will be removed in v2, please use autoPlay instead\n   */\n  playing?: boolean\n  onError?: (e: NativeSyntheticEvent<{ description: string }>) => void\n  onMute?: (e: NativeSyntheticEvent<{}>) => void\n  onPlaybackStateChanged?: (e: NativeSyntheticEvent<{ state: GiphyVideoViewPlaybackState }>) => void\n  onUnmute?: (e: NativeSyntheticEvent<{}>) => void\n}\n\nexport const NativeGiphyVideoView = requireNativeComponent<NativeGiphyVideoViewProps>('GiphyReactNativeVideoView')\n"]}