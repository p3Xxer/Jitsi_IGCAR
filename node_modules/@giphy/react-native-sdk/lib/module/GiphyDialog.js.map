{"version":3,"sources":["GiphyDialog.ts"],"names":["NativeEventEmitter","makeGiphyMedia","noop","GiphyVideoManager","GiphyDialogEvent","NativeGiphyDialog","wrapMediaSelectedListener","listener","e","media","GiphyDialog","constructor","addListener","MediaSelected","Dismissed","eventType","rest","configure","config","show","pauseAll","hide"],"mappings":"AAAA,SAA8BA,kBAA9B,QAAwD,cAAxD;AAEA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAEEC,gBAFF,EAKEC,iBALF,QAMO,sBANP;;AAUA,SAASC,yBAAT,CAAmCC,QAAnC,EAA0G;AACxG,SAAQC,CAAD,IAAO;AACZA,IAAAA,CAAC,CAACC,KAAF,GAAUR,cAAc,CAACO,CAAC,CAACC,KAAH,CAAxB;AACA,WAAOF,QAAQ,CAACC,CAAD,CAAf;AACD,GAHD;AAID;;AAED,OAAO,MAAME,WAAW,GAAG,IAAK,cAAcV,kBAAd,CAAiC;AAC/DW,EAAAA,WAAW,GAAG;AACZ,UAAMN,iBAAN,EADY,CAEZ;;AACA,SAAKO,WAAL,CAAiBR,gBAAgB,CAACS,aAAlC,EAAiDX,IAAjD;AACA,SAAKU,WAAL,CAAiBR,gBAAgB,CAACU,SAAlC,EAA6CZ,IAA7C;AACD;;AAEDU,EAAAA,WAAW,CAACG,SAAD,EAAoBR,QAApB,EAA4F;AAAA,sCAAlCS,IAAkC;AAAlCA,MAAAA,IAAkC;AAAA;;AACrG,QAAID,SAAS,KAAKX,gBAAgB,CAACS,aAAnC,EAAkD;AAChD,aAAO,MAAMD,WAAN,CAAkBG,SAAlB,EAA6BR,QAA7B,EAAuC,GAAGS,IAA1C,CAAP;AACD;;AAED,WAAO,MAAMJ,WAAN,CAAkBG,SAAlB,EAA6BT,yBAAyB,CAACC,QAAD,CAAtD,EAAkE,GAAGS,IAArE,CAAP;AACD;;AAEDC,EAAAA,SAAS,CAACC,MAAD,EAA4B;AACnCb,IAAAA,iBAAiB,CAACY,SAAlB,CAA4BC,MAA5B;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACLhB,IAAAA,iBAAiB,CAACiB,QAAlB;AACAf,IAAAA,iBAAiB,CAACc,IAAlB;AACD;;AAEDE,EAAAA,IAAI,GAAG;AACLhB,IAAAA,iBAAiB,CAACgB,IAAlB;AACD;;AA3B8D,CAAtC,EAApB","sourcesContent":["import { EmitterSubscription, NativeEventEmitter } from 'react-native'\n\nimport { makeGiphyMedia } from './giphyMedia'\nimport { noop } from './utils/noop'\nimport { GiphyVideoManager } from './GiphyVideoManager'\nimport {\n  AndroidGiphyDialogConfig,\n  GiphyDialogEvent,\n  GiphyDialogMediaSelectEventHandler,\n  IOSGiphyDialogConfig,\n  NativeGiphyDialog,\n} from './native/GiphyDialog'\n\nexport type GiphyDialogConfig = IOSGiphyDialogConfig & AndroidGiphyDialogConfig\n\nfunction wrapMediaSelectedListener(listener: (...args: any[]) => any): GiphyDialogMediaSelectEventHandler {\n  return (e) => {\n    e.media = makeGiphyMedia(e.media)\n    return listener(e)\n  }\n}\n\nexport const GiphyDialog = new (class extends NativeEventEmitter {\n  constructor() {\n    super(NativeGiphyDialog)\n    // listener stubs\n    this.addListener(GiphyDialogEvent.MediaSelected, noop)\n    this.addListener(GiphyDialogEvent.Dismissed, noop)\n  }\n\n  addListener(eventType: string, listener: (...args: any[]) => any, ...rest: any[]): EmitterSubscription {\n    if (eventType !== GiphyDialogEvent.MediaSelected) {\n      return super.addListener(eventType, listener, ...rest)\n    }\n\n    return super.addListener(eventType, wrapMediaSelectedListener(listener), ...rest)\n  }\n\n  configure(config: GiphyDialogConfig) {\n    NativeGiphyDialog.configure(config)\n  }\n\n  show() {\n    GiphyVideoManager.pauseAll()\n    NativeGiphyDialog.show()\n  }\n\n  hide() {\n    NativeGiphyDialog.hide()\n  }\n})()\n"]}