import { EventSubscriptionVendor } from 'react-native';
import type { GiphyMedia } from '../giphyMedia';
import type { GiphyClipsRendition, GiphyContentType, GiphyFileExtension, GiphyRating, GiphyRendition, GiphyStickersColumnCount, GiphyThemePreset } from './types';
export declare type BaseNativeGiphyDialogConfig = {
    clipsPreviewRenditionType?: GiphyClipsRendition;
    mediaTypeConfig?: GiphyContentType[];
    rating?: GiphyRating;
    renditionType?: GiphyRendition;
    showConfirmationScreen?: boolean;
    stickerColumnCount?: GiphyStickersColumnCount;
    theme?: GiphyThemePreset;
    fileType?: GiphyFileExtension;
};
export declare type IOSGiphyDialogConfig = BaseNativeGiphyDialogConfig & {
    shouldLocalizeSearch?: boolean;
    trayHeightMultiplier?: number;
};
export declare type AndroidGiphyDialogConfig = BaseNativeGiphyDialogConfig & {
    confirmationRenditionType?: GiphyRendition;
    selectedContentType?: GiphyContentType;
    showCheckeredBackground?: boolean;
    showSuggestionsBar?: boolean;
};
export declare type NativeGiphyDialogConfig = IOSGiphyDialogConfig & AndroidGiphyDialogConfig;
export declare enum GiphyDialogEvent {
    MediaSelected = "onMediaSelect",
    Dismissed = "onDismiss"
}
export declare type GiphyDialogMediaSelectEventHandler = (e: {
    media: GiphyMedia;
}) => void;
export declare type GiphyDialogDismissEventHandler = (e: undefined) => void;
export interface INativeGiphyDialog extends EventSubscriptionVendor {
    configure(options: NativeGiphyDialogConfig): void;
    show(): void;
    hide(): void;
}
export declare const NativeGiphyDialog: INativeGiphyDialog;
