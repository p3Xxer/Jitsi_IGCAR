import React, { useLayoutEffect } from 'react';
import { findByTestId, fireEvent } from '@testing-library/dom';
import Tooltip from '../../src';
export default {
  title: 'Examples'
};

function Child() {
  return /*#__PURE__*/React.createElement("div", {
    id: "tooltip-reference"
  }, "New tooltip");
}

function DefaultTooltip() {
  useLayoutEffect(() => {}, []);
  return /*#__PURE__*/React.createElement(Tooltip, {
    delay: 0,
    content: "Hello World",
    testId: "tooltip"
  }, /*#__PURE__*/React.createElement(Child, null));
}

export const tooltip = () => /*#__PURE__*/React.createElement(DefaultTooltip, null);
const interactionTasks = [{
  name: 'Display tooltip',
  description: 'Hover over div and wait for tooltip to load',
  run: async ({
    container,
    controls
  }) => {
    const element = container.querySelector('#tooltip-reference');

    if (!element) {
      throw new Error('no div found');
    }

    const parent = container.parentElement;

    if (parent == null) {
      throw new Error('Could not find parent element');
    }

    const tooltip = parent.querySelector('[data-testid="tooltip"]');

    if (tooltip != null) {
      throw new Error('Unexpected tooltip found');
    }

    await controls.time(async () => {
      fireEvent.mouseOver(element);
      await findByTestId(parent, 'tooltip');
    });
  }
}];
tooltip.story = {
  name: 'Default Tooltip',
  parameters: {
    performance: {
      interactions: interactionTasks
    }
  }
};