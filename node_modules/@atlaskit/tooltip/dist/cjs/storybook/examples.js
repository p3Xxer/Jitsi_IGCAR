"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tooltip = exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireWildcard(require("react"));

var _dom = require("@testing-library/dom");

var _src = _interopRequireDefault(require("../../src"));

var _default = {
  title: 'Examples'
};
exports.default = _default;

function Child() {
  return /*#__PURE__*/_react.default.createElement("div", {
    id: "tooltip-reference"
  }, "New tooltip");
}

function DefaultTooltip() {
  (0, _react.useLayoutEffect)(function () {}, []);
  return /*#__PURE__*/_react.default.createElement(_src.default, {
    delay: 0,
    content: "Hello World",
    testId: "tooltip"
  }, /*#__PURE__*/_react.default.createElement(Child, null));
}

var tooltip = function tooltip() {
  return /*#__PURE__*/_react.default.createElement(DefaultTooltip, null);
};

exports.tooltip = tooltip;
var interactionTasks = [{
  name: 'Display tooltip',
  description: 'Hover over div and wait for tooltip to load',
  run: function () {
    var _run = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(_ref) {
      var container, controls, element, parent, tooltip;
      return _regenerator.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              container = _ref.container, controls = _ref.controls;
              element = container.querySelector('#tooltip-reference');

              if (element) {
                _context2.next = 4;
                break;
              }

              throw new Error('no div found');

            case 4:
              parent = container.parentElement;

              if (!(parent == null)) {
                _context2.next = 7;
                break;
              }

              throw new Error('Could not find parent element');

            case 7:
              tooltip = parent.querySelector('[data-testid="tooltip"]');

              if (!(tooltip != null)) {
                _context2.next = 10;
                break;
              }

              throw new Error('Unexpected tooltip found');

            case 10:
              _context2.next = 12;
              return controls.time( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
                return _regenerator.default.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        _dom.fireEvent.mouseOver(element);

                        _context.next = 3;
                        return (0, _dom.findByTestId)(parent, 'tooltip');

                      case 3:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              })));

            case 12:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    function run(_x) {
      return _run.apply(this, arguments);
    }

    return run;
  }()
}];
tooltip.story = {
  name: 'Default Tooltip',
  parameters: {
    performance: {
      interactions: interactionTasks
    }
  }
};