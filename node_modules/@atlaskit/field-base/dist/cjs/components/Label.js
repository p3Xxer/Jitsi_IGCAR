"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _Label = require("../styled/Label");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
  // eslint-disable-next-line no-console
  console.warn('The @atlaskit/field-base package has been deprecated. Please use the Form/Textfield/Textarea/etc packages instead.');
}

var Label = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Label, _Component);

  var _super = _createSuper(Label);

  function Label() {
    (0, _classCallCheck2.default)(this, Label);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Label, [{
    key: "render",
    value:
    /* eslint-disable jsx-a11y/no-static-element-interactions */
    function render() {
      var _this$props = this.props,
          appearance = _this$props.appearance,
          children = _this$props.children,
          htmlFor = _this$props.htmlFor,
          isFirstChild = _this$props.isFirstChild,
          isLabelHidden = _this$props.isLabelHidden,
          isDisabled = _this$props.isDisabled,
          isRequired = _this$props.isRequired,
          label = _this$props.label,
          onClick = _this$props.onClick;
      /* eslint-disable jsx-a11y/click-events-have-key-events */

      return /*#__PURE__*/_react.default.createElement(_Label.LabelWrapper, {
        htmlFor: htmlFor
      }, /*#__PURE__*/_react.default.createElement(_Label.LabelInner, {
        isHidden: isLabelHidden,
        inlineEdit: appearance === 'inline-edit',
        firstChild: isFirstChild,
        isDisabled: isDisabled
      }, /*#__PURE__*/_react.default.createElement("span", {
        onClick: onClick
      }, label), isRequired ? /*#__PURE__*/_react.default.createElement(_Label.RequiredIndicator, {
        role: "presentation"
      }, "*") : null), children);
    }
  }]);
  return Label;
}(_react.Component);

exports.default = Label;
(0, _defineProperty2.default)(Label, "defaultProps", {
  appearance: 'default'
});