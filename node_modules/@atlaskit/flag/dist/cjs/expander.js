"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _core = require("@emotion/core");

var _motion = require("@atlaskit/motion");

var _constants = require("@atlaskit/theme/constants");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n        max-height: ", "px;\n        transition: max-height 0.3s;\n        display: flex;\n        flex: 1 1 100%;\n        flex-direction: column;\n        justify-content: center;\n        min-width: 0;\n        padding: 0 0 0 ", "px;\n      "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var paddingLeft = (0, _constants.gridSize)() * 5;

var Expander = function Expander(_ref) {
  var children = _ref.children,
      isExpanded = _ref.isExpanded,
      testId = _ref.testId;
  // Need to always render the ExpanderInternal otherwise the
  // reveal transition doesn't happen. We can't use CSS animation for
  // the the reveal because we don't know the height of the content.
  return (0, _core.jsx)("div", {
    "aria-hidden": !isExpanded,
    css: (0, _core.css)(_templateObject(), isExpanded ? 150 : 0, paddingLeft),
    "data-testid": testId && "".concat(testId, "-expander")
  }, (0, _core.jsx)(_motion.ExitingPersistence, {
    appear: true
  }, isExpanded && (0, _core.jsx)(_motion.FadeIn, null, function (props) {
    return (0, _core.jsx)("div", props, children);
  })));
};

var _default = Expander;
exports.default = _default;