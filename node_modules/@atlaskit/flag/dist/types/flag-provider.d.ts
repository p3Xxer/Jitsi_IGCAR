import React from 'react';
import { FlagPropsWithoutId } from './types';
declare type FlagId = string | number;
export declare type Combine<First, Second> = Omit<First, keyof Second> & Second;
export interface CreateFlagArgs extends FlagPropsWithoutId {
    /** A unique identifier used for rendering and onDismissed callbacks.
     * This will be autogenerated if you don’t supply one.
     * If you don’t want the same flag showing multiple times, provide a unique id.
     */
    id?: FlagId;
    /** Marks whether the flag should render as an AutoDismissFlag */
    isAutoDismiss?: boolean;
}
export declare type FlagArgs = Combine<CreateFlagArgs, {
    id: FlagId;
}>;
export declare type DismissFn = () => void;
export declare type FlagAPI = {
    showFlag: (args: CreateFlagArgs) => DismissFn;
};
export declare function useFlags(): FlagAPI;
export declare function FlagsProvider({ children }: {
    children: React.ReactNode;
}): JSX.Element;
export declare const withFlagsProvider: (fn: () => React.ReactNode) => React.ReactNode;
export {};
