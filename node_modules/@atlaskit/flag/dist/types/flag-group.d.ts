/** @jsx jsx */
import { ReactElement } from 'react';
import { UIAnalyticsEvent } from '@atlaskit/analytics-next';
declare type Props = {
    /** ID attribute used for DOM selection. */
    id?: string;
    /** Describes the specific role of this FlagGroup for users viewing the page with a screen reader (defaults to `Flag notifications`). */
    label?: string;
    /** Describes the specific tag on which the screen reader text will be rendered (defaults to `h2`). */
    labelTag?: React.ElementType;
    /** Flag elements to be displayed. */
    children?: Array<ReactElement> | ReactElement;
    /** Handler which will be called when a Flag's dismiss button is clicked.
     * Receives the id of the dismissed Flag as a parameter.
     */
    onDismissed?: (id: number | string, analyticsEvent: UIAnalyticsEvent) => void;
};
export declare const flagWidth: number;
export declare const flagAnimationTime = 400;
declare type FlagGroupAPI = {
    onDismissed?: (id: number | string, analyticsEvent: UIAnalyticsEvent) => void;
    dismissAllowed: (id: number | string) => Boolean;
};
export declare const FlagGroupContext: import("react").Context<FlagGroupAPI>;
export declare function useFlagGroup(): FlagGroupAPI;
declare const FlagGroup: (props: Props) => JSX.Element;
export default FlagGroup;
