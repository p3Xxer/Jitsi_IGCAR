"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _item = require("@atlaskit/item");

var colors = _interopRequireWildcard(require("@atlaskit/theme/colors"));

var _components = require("@atlaskit/theme/components");

var _constants = require("@atlaskit/theme/constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var dropdownPadding = {
  bottom: _constants.gridSize,
  left: (0, _constants.gridSize)() * 1.5,
  right: (0, _constants.gridSize)() * 1.5,
  top: _constants.gridSize
};
var droplistItemTheme = {
  padding: {
    default: dropdownPadding,
    compact: dropdownPadding
  },
  borderRadius: function borderRadius() {
    return 0;
  },
  default: {
    background: (0, _components.themed)({
      light: colors.N0,
      dark: colors.DN50
    }),
    text: (0, _components.themed)({
      light: colors.N800,
      dark: colors.DN600
    }),
    secondaryText: (0, _components.themed)({
      light: colors.N200,
      dark: colors.DN300
    })
  },
  hover: {
    background: (0, _components.themed)({
      light: colors.N20,
      dark: colors.DN70
    }),
    text: (0, _components.themed)({
      light: colors.N800,
      dark: colors.DN600
    }),
    secondaryText: (0, _components.themed)({
      light: colors.N200,
      dark: colors.DN300
    })
  },
  active: {
    background: (0, _components.themed)({
      light: colors.B75,
      dark: colors.B75
    }),
    text: (0, _components.themed)({
      light: colors.N800,
      dark: colors.B400
    }),
    secondaryText: (0, _components.themed)({
      light: colors.N200,
      dark: colors.DN300
    })
  },
  selected: {
    background: 'transparent',
    text: (0, _components.themed)({
      light: colors.N800,
      dark: colors.DN600
    }),
    secondaryText: (0, _components.themed)({
      light: colors.N200,
      dark: colors.DN300
    })
  },
  disabled: {
    background: 'transparent',
    text: (0, _components.themed)({
      light: colors.N70,
      dark: colors.DN80
    }),
    secondaryText: (0, _components.themed)({
      light: colors.N50,
      dark: colors.DN70
    })
  },
  focus: {
    outline: (0, _components.themed)({
      light: colors.B100,
      dark: colors.B75
    })
  }
};

var _default = (0, _defineProperty2.default)({}, _item.itemThemeNamespace, droplistItemTheme);

exports.default = _default;