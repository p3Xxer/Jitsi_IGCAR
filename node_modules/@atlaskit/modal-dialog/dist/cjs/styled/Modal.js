"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dialog = exports.PositionerFixed = exports.PositionerRelative = exports.PositionerAbsolute = exports.FillScreen = exports.dialogHeight = exports.dialogWidth = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _core = require("@emotion/core");

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _colors = require("@atlaskit/theme/colors");

var _components = require("@atlaskit/theme/components");

var _constants = require("@atlaskit/theme/constants");

var _sharedVariables = require("../shared-variables");

function _templateObject7() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  ", "\n  color: ", ";\n  display: flex;\n  flex-direction: column;\n  height: ", ";\n  max-height: 100%;\n  outline: 0;\n  pointer-events: auto;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    height: 100%;\n    max-height: 100%;\n    border-radius: 0;\n  }\n"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  ", ";\n  position: fixed;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    ", ";\n  }\n"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  margin: ", "px auto;\n  position: relative;\n  width: ", ";\n  z-index: ", ";\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    ", ";\n    margin: 0;\n  }\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  ", ";\n  position: absolute;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    ", ";\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  height: 100%;\n  left: 0;\n  position: fixed;\n  top: 0;\n  max-width: 100%;\n  width: 100%;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  display: flex;\n  flex-direction: column;\n  height: ", ";\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ", ";\n  top: ", "px;\n  width: ", ";\n  z-index: ", ";\n  pointer-events: none;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  height: 100vh;\n  left: 0;\n  overflow-y: auto;\n  position: absolute;\n  top: ", "px;\n  width: 100%;\n  z-index: ", ";\n  -webkit-overflow-scrolling: touch;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var boxShadow = function boxShadow(_ref) {
  var isChromeless = _ref.isChromeless;
  return isChromeless ? 'none' : "\n      0 0 0 1px ".concat(_colors.N30A, ", 0 2px 1px ").concat(_colors.N30A, ",\n      0 0 20px -6px ").concat(_colors.N60A, "\n    ");
};

var dialogBgColor = function dialogBgColor(_ref2) {
  var isChromeless = _ref2.isChromeless;
  return isChromeless ? 'transparent' : (0, _components.themed)({
    light: _colors.N0,
    dark: _colors.DN50
  })();
};

var maxDimensions = "calc(100% - ".concat(_sharedVariables.gutter * 2, "px)");
var maxHeightDimensions = "calc(100% - ".concat(_sharedVariables.gutter * 2 - 1, "px)");

var dialogWidth = function dialogWidth(_ref3) {
  var widthName = _ref3.widthName,
      widthValue = _ref3.widthValue;

  if (typeof widthValue === 'number') {
    return "".concat(widthValue, "px");
  }

  return widthName ? "".concat(_sharedVariables.WIDTH_ENUM.widths[widthName], "px") : widthValue || 'auto';
};

exports.dialogWidth = dialogWidth;

var dialogHeight = function dialogHeight(_ref4) {
  var heightValue = _ref4.heightValue;

  if (typeof heightValue === 'number') {
    return "".concat(heightValue, "px");
  }

  return heightValue || 'auto';
};
/**
  NOTE:
  z-index
  - temporarily added to beat @atlaskit/navigation

  absolute + top
  - rather than fixed position so popper.js children are properly positioned

  overflow-y
  - only active when popper.js children invoked below the dialog
*/


exports.dialogHeight = dialogHeight;

var FillScreen = _styled.default.div(_templateObject(), function (props) {
  return props.scrollDistance;
}, _constants.layers.modal);

exports.FillScreen = FillScreen;

var positionBaseStyles = function positionBaseStyles(props) {
  return (0, _core.css)(_templateObject2(), maxHeightDimensions, maxDimensions, _sharedVariables.gutter, dialogWidth(props), _constants.layers.modal());
};

var positionBaseResponsiveStyles = (0, _core.css)(_templateObject3());

var PositionerAbsolute = _styled.default.div(_templateObject4(), positionBaseStyles, positionBaseResponsiveStyles);

exports.PositionerAbsolute = PositionerAbsolute;

var PositionerRelative = _styled.default.div(_templateObject5(), _sharedVariables.gutter, dialogWidth, _constants.layers.modal, positionBaseResponsiveStyles);

exports.PositionerRelative = PositionerRelative;

var PositionerFixed = _styled.default.div(_templateObject6(), positionBaseStyles, positionBaseResponsiveStyles);

exports.PositionerFixed = PositionerFixed;

var Dialog = _styled.default.div(_templateObject7(), function (props) {
  return props.isChromeless ? null : "\n          background-color: ".concat(dialogBgColor(props), ";\n          border-radius: ").concat((0, _constants.borderRadius)(), "px;\n          box-shadow: ").concat(boxShadow(props), ";\n        ");
}, _colors.text, function (props) {
  return dialogHeight({
    heightValue: props.heightValue
  });
});

exports.Dialog = Dialog;
PositionerAbsolute.displayName = 'PositionerAbsolute';
Dialog.displayName = 'Dialog';
FillScreen.displayName = 'FillScreen';
PositionerRelative.displayName = 'PositionerRelative';
PositionerFixed.displayName = 'PositionerFixed';