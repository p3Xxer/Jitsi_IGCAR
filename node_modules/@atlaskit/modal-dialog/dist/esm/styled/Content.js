import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject10() {
  var data = _taggedTemplateLiteral(["\n  flex: 1 0 auto;\n  margin: 0 ", "px;\n"]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteral(["\n  display: inline-flex;\n  margin: 0 -", "px;\n"]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["\n  position: relative;\n  align-items: center;\n  display: flex;\n  flex: 0 0 auto;\n  justify-content: space-between;\n  transition: box-shadow 200ms;\n  padding: ", "px ", "px ", "px\n    ", "px;\n  box-shadow: ", ";\n"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["\n  ", ";\n"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n  flex: 1 1 auto;\n  ", "\n  @media (min-width: 320px) and (max-width: 480px) {\n    overflow-y: auto;\n    height: 100%;\n  }\n  &:focus {\n    outline-offset: -1px;\n    outline-style: dotted;\n    outline-color: ", ";\n    outline-width: thin;\n  }\n"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n  color: ", ";\n  margin-right: ", "px;\n  flex: 0 0 auto;\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  flex: 1 1 auto;\n  min-width: 0;\n  word-wrap: break-word;\n  width: 100%;\n  ", ";\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-style: inherit;\n  font-weight: 500;\n  letter-spacing: -0.008em;\n  line-height: 1;\n  margin: 0;\n  min-width: 0;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  align-items: center;\n  display: flex;\n  flex: 0 0 auto;\n  justify-content: space-between;\n  transition: box-shadow 200ms;\n  position: relative;\n  padding: ", "px ", "px ", "px\n    ", "px;\n  box-shadow: ", ";\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  max-height: 100%;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import { css } from '@emotion/core';
import styled from '@emotion/styled';
import { DN30, N30, N800, R400, Y400 } from '@atlaskit/theme/colors';
import { themed } from '@atlaskit/theme/components';
import { gridSize } from '@atlaskit/theme/constants';
import { divide } from '@atlaskit/theme/math';
// Constants
// ==============================
var modalPadding = gridSize() * 3;
var keylineColor = themed({
  light: N30,
  dark: DN30
});
export var keylineHeight = 2; // Wrapper
// ==============================

export var wrapperStyles = css(_templateObject()); // Header
// ==============================

export var Header = styled.header(_templateObject2(), modalPadding, modalPadding, modalPadding - keylineHeight, modalPadding, function (props) {
  return props.showKeyline ? "0 ".concat(keylineHeight, "px 0 0 ").concat(keylineColor(props)) : 'none';
});
export var Title = styled.h4(_templateObject3());
export var TitleText = styled.span(_templateObject4(), function (props) {
  return !props.isHeadingMultiline && "\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    ";
});
var iconColor = {
  danger: R400,
  warning: Y400
};
export var titleIconWrapperStyles = function titleIconWrapperStyles(appearance) {
  return css(_templateObject5(), iconColor[appearance], gridSize());
}; // Body
// ==============================

/**
  Adding the padding here avoids cropping box shadow on first/last
  children. The combined vertical spacing is maintained by subtracting the
  keyline height from header and footer.
*/

export var bodyStyles = function bodyStyles(shouldScroll) {
  return css(_templateObject6(), shouldScroll ? "\n        overflow-y: auto;\n        overflow-x: hidden;\n        padding: ".concat(keylineHeight, "px ").concat(modalPadding, "px;\n      ") : "\n        padding: 0 ".concat(modalPadding, "px;\n      "), N800);
};
// Body styles are used when customizing the body of the component.
// This is duplicated here: https://bitbucket.org/atlassian/atlassian-frontend/src/3c6a7cf3d18e97608fc1a4dc822b9bb003781bf2/packages/design-system/modal-dialog/src/components/Content.tsx#packages/design-system/modal-dialog/src/components/Content.tsx-341
// On the next major version delete `bodyStyles` from this declaration! They're just doubling up now!
export var Body = styled.div(_templateObject7(), function (props) {
  return bodyStyles(props.shouldScroll);
}); // Footer
// ==============================

export var Footer = styled.footer(_templateObject8(), modalPadding - keylineHeight, modalPadding, modalPadding, modalPadding, function (props) {
  return props.showKeyline ? "0 -".concat(keylineHeight, "px 0 0 ").concat(keylineColor(props)) : 'none';
});
export var Actions = styled.div(_templateObject9(), divide(gridSize, 2));
export var ActionItem = styled.div(_templateObject10(), divide(gridSize, 2));