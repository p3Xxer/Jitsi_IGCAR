import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import Button from '@atlaskit/button/custom-theme-button';
import { ActionItem, Actions, Footer } from '../styled/Content';

var JustifyShim = function JustifyShim(props) {
  return /*#__PURE__*/React.createElement("span", props);
};

var ModalFooter = /*#__PURE__*/function (_React$Component) {
  _inherits(ModalFooter, _React$Component);

  var _super = _createSuper(ModalFooter);

  function ModalFooter() {
    _classCallCheck(this, ModalFooter);

    return _super.apply(this, arguments);
  }

  _createClass(ModalFooter, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          actions = _this$props.actions,
          appearance = _this$props.appearance,
          component = _this$props.component,
          onClose = _this$props.onClose,
          showKeyline = _this$props.showKeyline;
      var warning = 'You can provide `component` OR `actions`, not both.';

      if (!component && !actions) {
        return null;
      }

      if (component && actions) {
        console.warn(warning); // eslint-disable-line no-console

        return null;
      }

      if (component) {
        return /*#__PURE__*/React.createElement(component, {
          appearance: appearance,
          onClose: onClose,
          showKeyline: showKeyline
        });
      }

      return /*#__PURE__*/React.createElement(Footer, {
        showKeyline: showKeyline
      }, /*#__PURE__*/React.createElement(JustifyShim, null), /*#__PURE__*/React.createElement(Actions, null, actions ? actions.map(function (_ref, index) {
        var text = _ref.text,
            rest = _objectWithoutProperties(_ref, ["text"]);

        var variant = index !== 0 ? 'subtle' : appearance || 'primary';
        return /*#__PURE__*/React.createElement(ActionItem, {
          key: index
        }, /*#__PURE__*/React.createElement(Button, _extends({
          appearance: variant
        }, rest), text));
      }) : null));
    }
  }]);

  return ModalFooter;
}(React.Component);

export { ModalFooter as default };