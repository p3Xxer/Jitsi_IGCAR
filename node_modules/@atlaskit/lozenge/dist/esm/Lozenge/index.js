import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import { Theme } from '../theme';
import Container from './Container';
import Content from './Content';

var Lozenge = /*#__PURE__*/function (_PureComponent) {
  _inherits(Lozenge, _PureComponent);

  var _super = _createSuper(Lozenge);

  function Lozenge() {
    _classCallCheck(this, Lozenge);

    return _super.apply(this, arguments);
  }

  _createClass(Lozenge, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          children = _this$props.children,
          testId = _this$props.testId;
      return /*#__PURE__*/React.createElement(Theme.Provider, {
        value: theme
      }, /*#__PURE__*/React.createElement(Theme.Consumer, this.props, function (themeTokens) {
        return /*#__PURE__*/React.createElement(Container, _extends({
          testId: testId
        }, themeTokens), /*#__PURE__*/React.createElement(Content, themeTokens, children));
      }));
    }
  }]);

  return Lozenge;
}(PureComponent);

_defineProperty(Lozenge, "defaultProps", {
  isBold: false,
  appearance: 'default',
  maxWidth: 200
});

export { Lozenge as default };