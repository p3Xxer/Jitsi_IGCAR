"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.textPaddingRight = exports.textMarginLeft = exports.textFontSize = exports.tagHeightUnitless = exports.tagHeight = exports.maxWidthUnitless = exports.maxWidth = exports.maxTextWidthUnitless = exports.maxTextWidth = exports.defaultTextPadding = exports.defaultRoundedBorderRadius = exports.defaultMargin = exports.defaultBorderRadius = exports.cssVar = exports.buttonWidthUnitless = exports.buttonWidth = void 0;

var _constants = require("@atlaskit/theme/constants");

var gridSizeValue = (0, _constants.gridSize)();
var borderRadiusValue = (0, _constants.borderRadius)();
var fontSizeValue = (0, _constants.fontSize)();
var tagHeightUnitless = 2.5 * gridSizeValue;
exports.tagHeightUnitless = tagHeightUnitless;
var tagHeight = "".concat(tagHeightUnitless, "px");
exports.tagHeight = tagHeight;
var buttonWidthUnitless = tagHeightUnitless; // button should be square

exports.buttonWidthUnitless = buttonWidthUnitless;
var buttonWidth = tagHeight; // button should be square

exports.buttonWidth = buttonWidth;
var maxWidthUnitless = 25 * gridSizeValue;
exports.maxWidthUnitless = maxWidthUnitless;
var maxWidth = "".concat(maxWidthUnitless, "px");
exports.maxWidth = maxWidth;
var maxTextWidthUnitless = maxWidthUnitless - tagHeightUnitless;
exports.maxTextWidthUnitless = maxTextWidthUnitless;
var maxTextWidth = "".concat(maxTextWidthUnitless, "px");
exports.maxTextWidth = maxTextWidth;
var defaultBorderRadius = "".concat(borderRadiusValue, "px");
exports.defaultBorderRadius = defaultBorderRadius;
var defaultRoundedBorderRadius = "".concat(buttonWidthUnitless / 2, "px");
exports.defaultRoundedBorderRadius = defaultRoundedBorderRadius;
var defaultMargin = "".concat(gridSizeValue / 2, "px");
exports.defaultMargin = defaultMargin;
var defaultTextPadding = "".concat(gridSizeValue / 2, "px");
exports.defaultTextPadding = defaultTextPadding;
var textPaddingRight = "".concat(2 * gridSizeValue, "px");
exports.textPaddingRight = textPaddingRight;
var textMarginLeft = "".concat(tagHeightUnitless, "px");
exports.textMarginLeft = textMarginLeft;
var textFontSize = "".concat(fontSizeValue, "px");
exports.textFontSize = textFontSize;
var cssVar = {
  color: {
    background: {
      default: '--ds-cb',
      active: '--ds-cba',
      hover: '--ds-cbh'
    },
    focusRing: '--ds-cfr',
    text: {
      default: '--ds-ct',
      hover: '--ds-cth'
    }
  },
  borderRadius: '--ds-br'
};
exports.cssVar = cssVar;