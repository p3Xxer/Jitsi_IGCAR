import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import React from 'react';
import { fireEvent } from '@testing-library/dom';
import Toggle from '../../src';
export default {
  title: 'Toggle'
};
export var toggle = function toggle() {
  return /*#__PURE__*/React.createElement(Toggle, {
    testId: "my-toggle"
  });
};
var interactionTasks = [{
  name: 'Change toggle status',
  description: 'Switch a toggle on and off',
  run: function () {
    var _run = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {
      var container, toggles, last;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              container = _ref.container;
              toggles = Array.from(container.querySelectorAll('[data-testid="my-toggle"]'));
              last = toggles[toggles.length - 1];
              fireEvent.click(last);

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function run(_x) {
      return _run.apply(this, arguments);
    }

    return run;
  }()
}];
toggle.story = {
  name: 'Toggle',
  parameters: {
    performance: {
      interactions: interactionTasks
    }
  }
};