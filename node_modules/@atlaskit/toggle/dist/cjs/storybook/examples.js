"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toggle = exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _dom = require("@testing-library/dom");

var _src = _interopRequireDefault(require("../../src"));

var _default = {
  title: 'Toggle'
};
exports.default = _default;

var toggle = function toggle() {
  return /*#__PURE__*/_react.default.createElement(_src.default, {
    testId: "my-toggle"
  });
};

exports.toggle = toggle;
var interactionTasks = [{
  name: 'Change toggle status',
  description: 'Switch a toggle on and off',
  run: function () {
    var _run = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {
      var container, toggles, last;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              container = _ref.container;
              toggles = Array.from(container.querySelectorAll('[data-testid="my-toggle"]'));
              last = toggles[toggles.length - 1];

              _dom.fireEvent.click(last);

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function run(_x) {
      return _run.apply(this, arguments);
    }

    return run;
  }()
}];
toggle.story = {
  name: 'Toggle',
  parameters: {
    performance: {
      interactions: interactionTasks
    }
  }
};