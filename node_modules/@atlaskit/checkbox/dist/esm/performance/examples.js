import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import React from 'react';
import { fireEvent } from '@testing-library/react';
import { Checkbox } from '../../src';
var interactionTasks = [{
  name: 'Select checkbox',
  description: 'Select checkbox',
  run: function () {
    var _run = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {
      var container, controls, checkbox;
      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              container = _ref.container, controls = _ref.controls;
              checkbox = container.querySelector('input[name="checkbox-basic"]');

              if (!(checkbox == null)) {
                _context2.next = 4;
                break;
              }

              throw new Error('Could not find checkbox element');

            case 4:
              _context2.next = 6;
              return controls.time( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
                return _regeneratorRuntime.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        fireEvent.click(checkbox);

                      case 1:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              })));

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    function run(_x) {
      return _run.apply(this, arguments);
    }

    return run;
  }()
}, {
  name: 'Hover checkbox',
  description: 'Hover checkbox',
  run: function () {
    var _run2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref3) {
      var container, controls, checkbox;
      return _regeneratorRuntime.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              container = _ref3.container, controls = _ref3.controls;
              checkbox = container.querySelector('input[name="checkbox-basic"]');

              if (!(checkbox == null)) {
                _context4.next = 4;
                break;
              }

              throw new Error('Could not find checkbox element');

            case 4:
              _context4.next = 6;
              return controls.time( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
                return _regeneratorRuntime.wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        fireEvent.mouseOver(checkbox);

                      case 1:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, _callee3);
              })));

            case 6:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    function run(_x2) {
      return _run2.apply(this, arguments);
    }

    return run;
  }()
}, {
  name: 'Focus checkbox',
  description: 'Focus checkbox',
  run: function () {
    var _run3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref5) {
      var container, controls, checkbox;
      return _regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              container = _ref5.container, controls = _ref5.controls;
              checkbox = container.querySelector('input[name="checkbox-basic"]');

              if (!(checkbox == null)) {
                _context6.next = 4;
                break;
              }

              throw new Error('Could not find checkbox element');

            case 4:
              _context6.next = 6;
              return controls.time( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {
                return _regeneratorRuntime.wrap(function _callee5$(_context5) {
                  while (1) {
                    switch (_context5.prev = _context5.next) {
                      case 0:
                        fireEvent.focus(checkbox);

                      case 1:
                      case "end":
                        return _context5.stop();
                    }
                  }
                }, _callee5);
              })));

            case 6:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6);
    }));

    function run(_x3) {
      return _run3.apply(this, arguments);
    }

    return run;
  }()
}];

function PerformanceComponent() {
  return /*#__PURE__*/React.createElement(Checkbox, {
    value: "Basic checkbox",
    label: "Basic checkbox",
    name: "checkbox-basic",
    testId: "cb-basic"
  });
}

export var performance = function performance() {
  return /*#__PURE__*/React.createElement(PerformanceComponent, null);
};
performance.story = {
  name: 'Performance',
  parameters: {
    performance: {
      interactions: interactionTasks
    }
  }
};