import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/** @jsx jsx */
import { Component } from 'react';
import { jsx } from '@emotion/core';
import { tabPaneStyles } from '../internal/styles';

var TabContent = /*#__PURE__*/function (_Component) {
  _inherits(TabContent, _Component);

  var _super = _createSuper(TabContent);

  function TabContent() {
    _classCallCheck(this, TabContent);

    return _super.apply(this, arguments);
  }

  _createClass(TabContent, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          data = _this$props.data,
          elementProps = _this$props.elementProps,
          isSelected = _this$props.isSelected;
      return jsx("div", _extends({
        css: tabPaneStyles
      }, elementProps, {
        "data-selected": isSelected ? 'true' : undefined
      }), data.content);
    }
  }]);

  return TabContent;
}(Component);

_defineProperty(TabContent, "defaultProps", {
  data: {},
  elementProps: {},
  isSelected: false
});

export { TabContent as default };