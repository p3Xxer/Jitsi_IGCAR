import * as t from '@babel/types';
import { NodePath } from '@babel/core';
import { Metadata } from '../types';
/**
 * Takes a styled tagged template or call expression and then transforms it to a compiled component.
 *
 * `styled.div({})`
 *
 * @param path Babel path - expects to be a tagged template or call expression.
 * @param state Babel state - should house options and meta data used during the transformation.
 */
export declare const visitStyledPath: (path: NodePath<t.TaggedTemplateExpression> | NodePath<t.CallExpression>, meta: Metadata) => void;
