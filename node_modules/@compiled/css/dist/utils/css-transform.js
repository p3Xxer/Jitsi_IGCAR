"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformCss = void 0;
var postcss_1 = __importDefault(require("postcss"));
var autoprefixer_1 = __importDefault(require("autoprefixer"));
var postcss_nested_1 = __importDefault(require("postcss-nested"));
var postcss_normalize_whitespace_1 = __importDefault(require("postcss-normalize-whitespace"));
var utils_1 = require("@compiled/utils");
var discard_duplicates_1 = require("../plugins/discard-duplicates");
var parent_orphaned_pseudos_1 = require("../plugins/parent-orphaned-pseudos");
var normalize_css_1 = require("../plugins/normalize-css");
var extract_stylesheets_1 = require("../plugins/extract-stylesheets");
var atomicify_rules_1 = require("../plugins/atomicify-rules");
var expand_shorthands_1 = require("../plugins/expand-shorthands");
var sort_at_rule_pseudos_1 = require("../plugins/sort-at-rule-pseudos");
/**
 * Will transform CSS into multiple CSS sheets.
 *
 * @param selector CSS selector such as `.class`
 * @param css CSS string
 * @param opts Transformation options
 */
var transformCss = function (css) {
    var sheets = [];
    var classNames = [];
    var result = postcss_1.default(__spreadArrays([
        discard_duplicates_1.discardDuplicates(),
        parent_orphaned_pseudos_1.parentOrphanedPseudos(),
        postcss_nested_1.default()
    ], normalize_css_1.normalizeCSS(), [
        expand_shorthands_1.expandShorthands(),
        atomicify_rules_1.atomicifyRules({ callback: function (className) { return classNames.push(className); } }),
        sort_at_rule_pseudos_1.sortAtRulePseudos(),
        autoprefixer_1.default(),
        postcss_normalize_whitespace_1.default,
        extract_stylesheets_1.extractStyleSheets({ callback: function (sheet) { return sheets.push(sheet); } }),
    ])).process(css, {
        from: undefined,
    });
    // We need to access something to make the transformation happen.
    result.css;
    return {
        sheets: sheets,
        classNames: utils_1.unique(classNames),
    };
};
exports.transformCss = transformCss;
//# sourceMappingURL=css-transform.js.map