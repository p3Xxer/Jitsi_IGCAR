"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parentOrphanedPseudos = void 0;
var postcss_1 = require("postcss");
var postcss_selector_parser_1 = __importDefault(require("postcss-selector-parser"));
var prependNestingTypeToSelector = function (selector) {
    var parent = selector.parent;
    if (parent) {
        var nesting = postcss_selector_parser_1.default.nesting();
        parent.insertBefore(selector, nesting);
    }
};
/**
 * Parent orphened pseudos PostCSS plugin.
 * This plugin will move child nested orphened pseudos to the parent declaration.
 *
 * E.g: `.class { &:hover {} }` will become `.class:hover {}`
 */
exports.parentOrphanedPseudos = postcss_1.plugin('parent-orphened-pseudos', function () {
    return function (root) {
        root.walkRules(function (rule) {
            var selectors = rule.selectors;
            rule.selectors = selectors.map(function (selector) {
                if (!selector.startsWith(':')) {
                    return selector;
                }
                var parser = postcss_selector_parser_1.default(function (root) {
                    root.walkPseudos(function (pseudoSelector) {
                        prependNestingTypeToSelector(pseudoSelector);
                    });
                }).astSync(selector, { lossless: false });
                return parser.toString();
            });
        });
    };
});
//# sourceMappingURL=parent-orphaned-pseudos.js.map