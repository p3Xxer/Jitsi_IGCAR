"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.flex = void 0;
var utils_1 = require("./utils");
/**
 * https://developer.mozilla.org/en-US/docs/Web/CSS/flex
 */
var flex = function (value) {
    var _a = value.nodes, left = _a[0], middle = _a[1], right = _a[2];
    var grow = 'auto';
    var shrink = 'initial';
    var basis = 'none';
    switch (value.nodes.length) {
        case 1: {
            if (left.type === 'numeric' && !left.unit) {
                grow = left.value;
                shrink = 1;
                basis = 0;
            }
            if (left.type === 'word' && left.value !== 'none') {
                // Invalid
                return [];
            }
            break;
        }
        case 2: {
            if (left.type === 'numeric' && !left.unit) {
                grow = left.value;
            }
            else {
                return [];
            }
            if (middle.type === 'numeric' && !middle.unit) {
                shrink = middle.value;
                basis = 0;
            }
            else if (utils_1.isWidth(middle)) {
                shrink = 1;
                var value_1 = utils_1.getWidth(middle);
                if (value_1) {
                    basis = value_1;
                }
                else {
                    // Invalid
                    return [];
                }
            }
            else {
                // Invalid
                return [];
            }
            break;
        }
        case 3: {
            if (left.type === 'numeric' && !left.unit) {
                grow = left.value;
            }
            else {
                return [];
            }
            if (middle.type === 'numeric' && !middle.unit) {
                shrink = middle.value;
                basis = 0;
            }
            if (utils_1.isWidth(right)) {
                var value_2 = utils_1.getWidth(right);
                if (value_2) {
                    basis = value_2;
                }
                else {
                    // Invalid
                    return [];
                }
            }
            else {
                // Invalid
                return [];
            }
            break;
        }
        default:
            // Invalid
            return [];
    }
    return [
        { prop: 'flex-grow', value: grow },
        { prop: 'flex-shrink', value: shrink },
        { prop: 'flex-basis', value: basis },
    ];
};
exports.flex = flex;
//# sourceMappingURL=flex.js.map