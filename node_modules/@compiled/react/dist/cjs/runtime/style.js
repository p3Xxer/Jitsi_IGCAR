"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var sheet_1 = __importStar(require("./sheet"));
var dev_warnings_1 = require("./dev-warnings");
var style_cache_1 = require("./style-cache");
var is_node_1 = require("./is-node");
function Style(props) {
    var inserted = style_cache_1.useCache();
    if (process.env.NODE_ENV === 'development') {
        props.children.forEach(dev_warnings_1.analyzeCssInDev);
    }
    if (props.children.length) {
        if (is_node_1.isNodeEnvironment()) {
            var bucketedSheets_1 = {};
            var hasSheets = false;
            for (var i = 0; i < props.children.length; i++) {
                var sheet = props.children[i];
                if (inserted[sheet]) {
                    continue;
                }
                else {
                    inserted[sheet] = true;
                    hasSheets = true;
                }
                var bucketName = sheet_1.getStyleBucketName(sheet);
                bucketedSheets_1[bucketName] = (bucketedSheets_1[bucketName] || '') + sheet;
            }
            if (!hasSheets) {
                return null;
            }
            return (react_1.default.createElement("style", { "data-cmpld": true, nonce: props.nonce }, sheet_1.styleBucketOrdering.map(function (bucket) { return bucketedSheets_1[bucket]; }).join('')));
        }
        else {
            for (var i = 0; i < props.children.length; i++) {
                var sheet = props.children[i];
                if (inserted[sheet]) {
                    continue;
                }
                inserted[sheet] = true;
                sheet_1.default(sheet, props);
            }
        }
    }
    return null;
}
exports.default = react_1.memo(Style, function () { return true; });
//# sourceMappingURL=style.js.map