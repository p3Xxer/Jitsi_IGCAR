"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClassNames = void 0;
var error_1 = require("../utils/error");
/**
 * Use `ClassNames` to have more control over a component that has styles not necessarily tied to an element,
 * enabling powerful patterns with render props.
 *
 * ```
 * // Object CSS
 * <ClassNames>
 *   {({ css, style }) => children({ className: css({ fontSize: 12 }) })}
 * </ClassNames>
 *
 * // Template literal CSS
 * <ClassNames>
 *   {({ css, style }) => children({ className: css`font-size: 12px;` })}
 * </ClassNames>
 *
 * // Array CSS
 * <ClassNames>
 *   {({ css, style }) =>
 *    children({ className: css([{ fontSize: 12 }, `font-size: 12px`]) })}
 * </ClassNames>
 * ```
 *
 * For more help, read the docs:
 * https://compiledcssinjs.com/docs/class-names
 *
 * @param props
 */
function ClassNames(_) {
    throw error_1.createSetupError();
}
exports.ClassNames = ClassNames;
//# sourceMappingURL=index.js.map