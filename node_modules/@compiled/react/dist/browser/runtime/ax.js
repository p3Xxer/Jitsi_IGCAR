var UNDERSCORE_UNICODE = 95;
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */
var ATOMIC_GROUP_LENGTH = 5;
/**
 * Joins classes together and ensures atomic declarations of a single group exist.
 * Atomic declarations take the form of `_{group}{value}` (always prefixed with an underscore),
 * where both `group` and `value` are hashes **four characters long**.
 * Class names can be of any length,
 * this function can take both atomic declarations and class names.
 *
 * Input:
 *
 * ```
 * ax(['_aaaabbbb', '_aaaacccc'])
 * ```
 *
 * Output:
 *
 * ```
 * '_aaaacccc'
 * ```
 *
 * @param classes
 */
export default function ax(classNames) {
    if (classNames.length <= 1) {
        // short circuit if theres no custom class names.
        return classNames[0] || undefined;
    }
    var atomicGroups = {};
    for (var i = 0; i < classNames.length; i++) {
        var cls = classNames[i];
        if (!cls) {
            continue;
        }
        var groups = cls.split(' ');
        for (var x = 0; x < groups.length; x++) {
            var atomic = groups[x];
            var atomicGroupName = atomic.slice(0, atomic.charCodeAt(0) === UNDERSCORE_UNICODE ? ATOMIC_GROUP_LENGTH : undefined);
            atomicGroups[atomicGroupName] = atomic;
        }
    }
    var str = '';
    for (var key in atomicGroups) {
        var value = atomicGroups[key];
        str += value + ' ';
    }
    return str.slice(0, -1);
}
//# sourceMappingURL=ax.js.map