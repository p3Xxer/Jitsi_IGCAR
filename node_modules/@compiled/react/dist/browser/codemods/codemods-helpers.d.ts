import { JSCodeshift, ImportDeclaration, ImportDefaultSpecifier, ImportSpecifier, Program, Identifier, JSXIdentifier, TSTypeParameter, Node, Collection } from 'jscodeshift';
declare type Identifiers = Array<Identifier | JSXIdentifier | TSTypeParameter>;
export declare const getImportDeclarationCollection: ({ j, collection, importPath, }: {
    j: JSCodeshift;
    collection: Collection<any>;
    importPath: string;
}) => Collection<ImportDeclaration>;
export declare const hasImportDeclaration: ({ j, collection, importPath, }: {
    j: JSCodeshift;
    collection: Collection<any>;
    importPath: string;
}) => boolean;
export declare const getImportDefaultSpecifierName: (importDefaultSpecifierCollection: Collection<ImportDefaultSpecifier>) => string;
export declare const getImportSpecifierName: (importSpecifierCollection: Collection<ImportSpecifier>) => string | undefined;
export declare const getAllImportSpecifiers: ({ j, importDeclarationCollection, }: {
    j: JSCodeshift;
    importDeclarationCollection: Collection<ImportDeclaration>;
}) => Identifiers;
export declare const findImportSpecifierName: ({ j, importDeclarationCollection, importName, }: {
    j: JSCodeshift;
    importDeclarationCollection: Collection<ImportDeclaration>;
    importName: string;
}) => string | null | undefined;
export declare const convertDefaultImportToNamedImport: ({ j, collection, importPath, namedImport, }: {
    j: JSCodeshift;
    collection: Collection<any>;
    importPath: string;
    namedImport: string;
}) => void;
export declare const addCommentBefore: ({ j, collection, message, }: {
    j: JSCodeshift;
    collection: Collection<Program>;
    message: string;
}) => void;
export declare const addCommentToStartOfFile: ({ j, collection, message, }: {
    j: JSCodeshift;
    collection: Collection<Node>;
    message: string;
}) => void;
export declare const addCommentForUnresolvedImportSpecifiers: ({ j, collection, importPath, allowedImportSpecifierNames, }: {
    j: JSCodeshift;
    collection: Collection<Node>;
    importPath: string;
    allowedImportSpecifierNames: string[];
}) => void;
export declare const addReactIdentifier: ({ j, collection, }: {
    j: JSCodeshift;
    collection: Collection<Node>;
}) => void;
export declare const replaceImportDeclaration: ({ j, collection, importPath, }: {
    j: JSCodeshift;
    collection: Collection<Node>;
    importPath: string;
}) => void;
export declare const mergeImportSpecifiersAlongWithTheirComments: ({ j, collection, filter, }: {
    j: JSCodeshift;
    collection: Collection<Node>;
    filter?: ((name: string | undefined) => boolean) | undefined;
}) => void;
export {};
